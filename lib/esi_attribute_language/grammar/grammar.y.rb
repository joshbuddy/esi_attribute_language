#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'
module EsiAttributeLanguage
  class GrammarParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
    12,     7,     2,    40,    41,     4,    41,    42,    47,    42,
    21,    10,     1,    14,    15,    17,    29,     6,    18,    19,
    20,    22,    11,    13,     3,    16,     2,     2,     2,     4,
     4,     4,    23,    24,    23,    24,     1,     1,     1,    43,
    44,     6,     6,     6,     2,   nil,   nil,     4,     3,     3,
     3,   nil,     2,     2,     1,     4,     4,   nil,   nil,     6,
   nil,     2,     1,     1,     4,   nil,     3,     6,     6,     2,
     2,     1,     4,     4,     3,     3,     6,   nil,     2,     1,
     1,     4,   nil,     3,     6,     6,     2,     2,     1,     4,
     4,     3,     3,     6,   nil,     2,     1,     1,     4,   nil,
     3,     6,     6,     2,   nil,     1,     4,    26,     3,     3,
     6,    21,    10,     1,    14,    15,    17,     3,     6,    18,
    19,    20,    22,    11,    13,     3,    16,    21,    10,   nil,
    14,    15,    17,   nil,   nil,    18,    19,    20,    22,    11,
    13,   nil,    16,    21,    10,   nil,    14,    15,    17,   nil,
   nil,    18,    19,    20,    22,    11,    13,   nil,    16,    21,
    10,   nil,    14,    15,    17,   nil,   nil,    18,    19,    20,
    22,    11,    13,   nil,    16,    21,    10,   nil,    14,    15,
    17,   nil,   nil,    18,    19,    20,    22,    11,    13,   nil,
    16,    21,    10,   nil,    14,    15,    17,   nil,   nil,    18,
    19,    20,    22,    11,    13,   nil,    16,    21,    10,   nil,
    14,    15,    17,   nil,   nil,    18,    19,    20,    22,    11,
    13,   nil,    16,    21,    10,   nil,    14,    15,    17,   nil,
   nil,    18,    19,    20,    22,    11,    13,   nil,    16,    21,
    10,   nil,    14,    15,    17,   nil,   nil,    18,    19,    20,
    22,    11,    13,   nil,    16,    21,    10,   nil,    14,    15,
    17,   nil,   nil,    18,    19,    20,    22,    11,    13,   nil,
    16,    21,    10,   nil,    14,    15,    17,   nil,   nil,    18,
    19,    20,    22,    11,    13,   nil,    16,    21,    10,   nil,
    14,    15,    17,   nil,   nil,    18,    19,    20,    22,    11,
    13,   nil,    16,    21,    10,   nil,    14,    15,    17,   nil,
   nil,    18,    19,    20,    22,    11,    13,   nil,    16,    21,
    10,   nil,    14,    15,    17,   nil,   nil,    18,    19,    20,
    22,    11,    13,   nil,    16 ]

racc_action_check = [
     5,     2,    19,    25,    25,    19,    46,    25,    45,    46,
     5,     5,    19,     5,     5,     5,    12,    19,     5,     5,
     5,     5,     5,     5,    19,     5,     3,     4,     0,     3,
     4,     0,    42,    42,     7,     7,     3,     4,     0,    41,
    41,     3,     4,     0,    17,   nil,   nil,    17,     3,     4,
     0,   nil,    20,    22,    17,    20,    22,   nil,   nil,    17,
   nil,    10,    20,    22,    10,   nil,    17,    20,    22,    11,
    18,    10,    11,    18,    20,    22,    10,   nil,    13,    11,
    18,    13,   nil,    10,    11,    18,    14,    15,    13,    14,
    15,    11,    18,    13,   nil,    16,    14,    15,    16,   nil,
    13,    14,    15,    21,   nil,    16,    21,     9,    14,    15,
    16,     9,     9,    21,     9,     9,     9,    16,    21,     9,
     9,     9,     9,     9,     9,    21,     9,    28,    28,   nil,
    28,    28,    28,   nil,   nil,    28,    28,    28,    28,    28,
    28,   nil,    28,     8,     8,   nil,     8,     8,     8,   nil,
   nil,     8,     8,     8,     8,     8,     8,   nil,     8,    39,
    39,   nil,    39,    39,    39,   nil,   nil,    39,    39,    39,
    39,    39,    39,   nil,    39,    38,    38,   nil,    38,    38,
    38,   nil,   nil,    38,    38,    38,    38,    38,    38,   nil,
    38,    36,    36,   nil,    36,    36,    36,   nil,   nil,    36,
    36,    36,    36,    36,    36,   nil,    36,    27,    27,   nil,
    27,    27,    27,   nil,   nil,    27,    27,    27,    27,    27,
    27,   nil,    27,    33,    33,   nil,    33,    33,    33,   nil,
   nil,    33,    33,    33,    33,    33,    33,   nil,    33,    35,
    35,   nil,    35,    35,    35,   nil,   nil,    35,    35,    35,
    35,    35,    35,   nil,    35,    31,    31,   nil,    31,    31,
    31,   nil,   nil,    31,    31,    31,    31,    31,    31,   nil,
    31,    32,    32,   nil,    32,    32,    32,   nil,   nil,    32,
    32,    32,    32,    32,    32,   nil,    32,    37,    37,   nil,
    37,    37,    37,   nil,   nil,    37,    37,    37,    37,    37,
    37,   nil,    37,    34,    34,   nil,    34,    34,    34,   nil,
   nil,    34,    34,    34,    34,    34,    34,   nil,    34,    30,
    30,   nil,    30,    30,    30,   nil,   nil,    30,    30,    30,
    30,    30,    30,   nil,    30 ]

racc_action_pointer = [
    26,   nil,    -4,    24,    25,     0,   nil,    18,   133,   101,
    59,    67,    16,    76,    84,    85,    93,    42,    68,     0,
    50,   101,    51,   nil,   nil,    -3,   nil,   197,   117,   nil,
   309,   245,   261,   213,   293,   229,   181,   277,   165,   149,
   nil,    23,    16,   nil,   nil,     0,    -1,   nil ]

racc_action_default = [
   -24,    -1,   -24,   -24,   -24,   -24,    -2,   -24,   -15,   -24,
   -24,   -24,   -24,   -24,   -24,   -24,   -24,   -24,   -24,   -24,
   -24,   -24,   -24,   -21,   -18,   -24,   -16,   -11,    -7,    48,
    -8,   -12,   -13,    -9,   -14,    -3,    -4,    -5,   -10,    -6,
   -17,   -24,   -24,   -23,   -22,   -24,   -19,   -20 ]

racc_goto_table = [
    25,     5,    45,   nil,     8,     9,   nil,   nil,   nil,   nil,
   nil,    27,    28,   nil,    30,    31,    32,    33,    34,    35,
    36,    37,    38,    39,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    46 ]

racc_goto_check = [
     2,     1,     3,   nil,     1,     1,   nil,   nil,   nil,   nil,
   nil,     1,     1,   nil,     1,     1,     1,     1,     1,     1,
     1,     1,     1,     1,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,     1,    -7,   -39 ]

racc_goto_default = [
   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 27, :_reduce_1,
  1, 27, :_reduce_2,
  3, 27, :_reduce_3,
  3, 27, :_reduce_4,
  3, 27, :_reduce_5,
  3, 27, :_reduce_6,
  3, 27, :_reduce_7,
  3, 27, :_reduce_8,
  3, 27, :_reduce_9,
  3, 27, :_reduce_10,
  3, 27, :_reduce_11,
  3, 27, :_reduce_12,
  3, 27, :_reduce_13,
  3, 27, :_reduce_14,
  2, 27, :_reduce_15,
  3, 27, :_reduce_16,
  4, 27, :_reduce_17,
  1, 28, :_reduce_18,
  3, 28, :_reduce_19,
  4, 28, :_reduce_20,
  1, 28, :_reduce_21,
  1, 29, :_reduce_22,
  1, 29, :_reduce_23 ]

racc_reduce_n = 24

racc_shift_n = 48

racc_token_table = {
  false => 0,
  :error => 1,
  :DOLLAR => 2,
  :LSQUARE => 3,
  :RSQUARE => 4,
  :LPAREN => 5,
  :RPAREN => 6,
  :LBRACE => 7,
  :RBRACE => 8,
  :BSLASH => 9,
  :PIPE => 10,
  :PLUS => 11,
  :NUMBER => 12,
  :MINUS => 13,
  :STAR => 14,
  :SLASH => 15,
  :VARIABLE => 16,
  :STRING => 17,
  :EQ => 18,
  :NE => 19,
  :LTE => 20,
  :GTE => 21,
  :LT => 22,
  :GT => 23,
  :BANG => 24,
  :AMP => 25 }

racc_nt_base = 26

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "DOLLAR",
  "LSQUARE",
  "RSQUARE",
  "LPAREN",
  "RPAREN",
  "LBRACE",
  "RBRACE",
  "BSLASH",
  "PIPE",
  "PLUS",
  "NUMBER",
  "MINUS",
  "STAR",
  "SLASH",
  "VARIABLE",
  "STRING",
  "EQ",
  "NE",
  "LTE",
  "GTE",
  "LT",
  "GT",
  "BANG",
  "AMP",
  "$start",
  "expression",
  "variable",
  "hash_lookup" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 7)
  def _reduce_1(val, _values, result)
     result = Integer(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 8)
  def _reduce_2(val, _values, result)
     result = Node.cleanse_string(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 9)
  def _reduce_3(val, _values, result)
     result = MethodNode.new(val[0], :'==', val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 10)
  def _reduce_4(val, _values, result)
     result = MethodNode.new(MethodNode.new(val[0], :'==', val[2]), :'^', true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 11)
  def _reduce_5(val, _values, result)
     result = MethodNode.new(val[0], :'<=', val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 12)
  def _reduce_6(val, _values, result)
     result = MethodNode.new(val[0], :'>=', val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 13)
  def _reduce_7(val, _values, result)
     result = MethodNode.new(val[0], :'<' , val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 14)
  def _reduce_8(val, _values, result)
     result = MethodNode.new(val[0], :'>' , val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 15)
  def _reduce_9(val, _values, result)
     result = MethodNode.new(val[0], :'&' , val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 16)
  def _reduce_10(val, _values, result)
     result = MethodNode.new(val[0], :'|' , val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 17)
  def _reduce_11(val, _values, result)
     result = MethodNode.new(val[0], :+   , val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 18)
  def _reduce_12(val, _values, result)
     result = MethodNode.new(val[0], :-   , val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 19)
  def _reduce_13(val, _values, result)
     result = MethodNode.new(val[0], :'*' , val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 20)
  def _reduce_14(val, _values, result)
     result = MethodNode.new(val[0], :'/' , val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 21)
  def _reduce_15(val, _values, result)
     result = MethodNode.new(val[1], :'^', true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 22)
  def _reduce_16(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 23)
  def _reduce_17(val, _values, result)
     result = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 27)
  def _reduce_18(val, _values, result)
     result = Node.cleanse_string(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 28)
  def _reduce_19(val, _values, result)
     result = OrNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 29)
  def _reduce_20(val, _values, result)
     result = HashLookupNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 30)
  def _reduce_21(val, _values, result)
     result = VariableLookup.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 35)
  def _reduce_22(val, _values, result)
     result = Node.cleanse_string(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 36)
  def _reduce_23(val, _values, result)
     result = val[0] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class GrammarParser
  end   # module EsiAttributeLanguage
